{"version":3,"sources":["src/html-imports.js"],"names":["scope","constructor","Importer","doc","documents","imports","querySelectorAll","IMPORT_SELECTOR","i","l","length","whenElementLoaded","observe","MutationObserver","_onMutation","bind","head","childList","useNative","_loader","Loader","_onLoaded","_onLoadedAll","whenDocumentReady","then","_loadSubtree","onLoad","onComplete","cache","onload","oncomplete","inflight","pending","isImportLink","node","nodeType","Node","ELEMENT_NODE","MATCHES","call","fixUrlAttributes","element","base","attrs","forEach","a","at","attributes","v","value","search","Path","resolveUrlsInCssText","replaceAttrUrl","fixUrlsInTemplates","t$","content","template","n$","n","localName","resolveUrlsInStyle","runScripts","s$","document","promise","Promise","resolve","s","c","createElement","textContent","src","setAttribute","getAttribute","whenLoadedPromise","catch","currentScript","parentNode","replaceChild","script","waitForStyles","stylesInImportsSelector","promises","push","all","isIE","isEdge","stylesSelector","removeChild","appendChild","fireEvents","__fired","eventType","import","flags","log","console","warn","href","dispatchEvent","CustomEvent","bubbles","cancelable","detail","undefined","__loadPromise","reject","isElementLoaded","addEventListener","isLoaded","readyState","indexOf","sheet","csr","cssRules","type","CSSRule","IMPORT_RULE","styleSheet","whenReady","callback","watchImportsLoad","importInfo","requiredReadyState","READY_EVENT","checkReady","removeEventListener","allImports","loadedImports","errorImports","imp","bust","Object","defineProperty","get","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","style","linkUrl","cssText","r","replaceUrls","text","regexp","replace","m","pre","url","post","urlPath","URL","test","Xhr","async","load","request","XMLHttpRequest","Math","random","open","redirectedUrl","locationHeader","getResponseHeader","substr","location","origin","e","error","message","status","response","responseText","send","addNodes","nodes","require","checkDone","addNode","elt","dedupe","fetch","tail","match","pieces","split","body","header","atob","decodeURIComponent","receive","resource","err","$p","p","display","innerHTML","o","assetpath","importsSelectors","scriptType","_flatten","__firstImport","_observe","__importObserver","subtree","mutations","j","addedNodes","Element","prototype","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","navigator","userAgent","window","HTMLImports"],"mappings":"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","file":"html-imports.min.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(function(scope) {\n\n  /********************* base setup *********************/\n  const IMPORT_SELECTOR = 'link[rel=import]';\n  const useNative = Boolean('import' in document.createElement('link'));\n  const flags = {\n    bust: false,\n    log: false\n  };\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get: function() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n    resolveUrlsInStyle: function(style, linkUrl) {\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText: function(cssText, linkUrl) {\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls: function(text, linkUrl, regexp) {\n      return text.replace(regexp, function(m, pre, url, post) {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = (new URL(urlPath, linkUrl)).href;\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl: function(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return new URL(text, linkUrl).href;\n      }\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @param {!function(boolean, ?, string=)} callback\n     * @return {XMLHttpRequest}\n     */\n    load: function(url, callback) {\n      const request = new XMLHttpRequest();\n      if (flags.bust) {\n        url += '?' + Math.random();\n      }\n      request.open('GET', url, Xhr.async);\n      request.addEventListener('readystatechange', (e) => {\n        if (request.readyState === 4) {\n          // Servers redirecting an import can add a Location header to help us\n          // polyfill correctly.\n          let redirectedUrl = undefined;\n          try {\n            const locationHeader = request.getResponseHeader('Location');\n            if (locationHeader) {\n              // Relative or full path.\n              redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\n                location.origin + locationHeader : locationHeader;\n            }\n          } catch (e) {\n            console.error(e.message);\n          }\n          const isOk = ((request.status >= 200 && request.status < 300) ||\n            request.status === 304 || request.status === 0);\n          const resource = (request.response || request.responseText);\n          callback(!isOk, resource, redirectedUrl);\n        }\n      });\n      request.send();\n      return request;\n    }\n  };\n\n  /********************* loader *********************/\n  // This loader supports a dynamic list of urls\n  // and an oncomplete callback that is called when the loader is done.\n  // NOTE: The polyfill currently does *not* need this dynamism or the\n  // onComplete concept. Because of this, the loader could be simplified\n  // quite a bit.\n  class Loader {\n    constructor(onLoad, onComplete) {\n      this.cache = {};\n      this.onload = onLoad;\n      this.oncomplete = onComplete;\n      this.inflight = 0;\n      this.pending = {};\n    }\n\n    addNodes(nodes) {\n      // number of transactions to complete\n      this.inflight += nodes.length;\n      // commence transactions\n      for (let i = 0, l = nodes.length, n;\n        (i < l) && (n = nodes[i]); i++) {\n        this.require(n);\n      }\n      // anything to do?\n      this.checkDone();\n    }\n\n    addNode(node) {\n      // number of transactions to complete\n      this.inflight++;\n      // commence transactions\n      this.require(node);\n      // anything to do?\n      this.checkDone();\n    }\n\n    require(elt) {\n      const url = elt.src || elt.href;\n      // deduplication\n      if (!this.dedupe(url, elt)) {\n        // fetch this resource\n        this.fetch(url, elt);\n      }\n    }\n\n    dedupe(url, elt) {\n      if (this.pending[url]) {\n        // add to list of nodes waiting for inUrl\n        this.pending[url].push(elt);\n        // don't need fetch\n        return true;\n      }\n      let resource;\n      if (this.cache[url]) {\n        this.onload(url, elt, this.cache[url]);\n        // finished this transaction\n        this.tail();\n        // don't need fetch\n        return true;\n      }\n      // first node waiting for inUrl\n      this.pending[url] = [elt];\n      // need fetch (not a dupe)\n      return false;\n    }\n\n    fetch(url, elt) {\n      flags.log && console.log('fetch', url, elt);\n      if (!url) {\n        this.receive(url, elt, true, 'error: href must be specified');\n      } else if (url.match(/^data:/)) {\n        // Handle Data URI Scheme\n        const pieces = url.split(',');\n        const header = pieces[0];\n        let body = pieces[1];\n        if (header.indexOf(';base64') > -1) {\n          body = atob(body);\n        } else {\n          body = decodeURIComponent(body);\n        }\n        this.receive(url, elt, false, body);\n      } else {\n        Xhr.load(url, (error, resource, redirectedUrl) =>\n          this.receive(url, elt, error, resource, redirectedUrl));\n      }\n    }\n\n    /**\n     * @param {!string} url\n     * @param {!Element} elt\n     * @param {boolean} err\n     * @param {string=} resource\n     * @param {string=} redirectedUrl\n     */\n    receive(url, elt, err, resource, redirectedUrl) {\n      this.cache[url] = resource;\n      const $p = this.pending[url];\n      for (let i = 0, l = $p.length, p;\n        (i < l) && (p = $p[i]); i++) {\n        // If url was redirected, use the redirected location so paths are\n        // calculated relative to that.\n        this.onload(url, p, resource, err, redirectedUrl);\n        this.tail();\n      }\n      this.pending[url] = null;\n    }\n\n    tail() {\n      --this.inflight;\n      this.checkDone();\n    }\n\n    checkDone() {\n      if (!this.inflight) {\n        this.oncomplete();\n      }\n    }\n  }\n\n  /********************* importer *********************/\n\n  const stylesSelector = [\n    'style:not([type])',\n    'link[rel=stylesheet][href]:not([type])'\n  ].join(',');\n\n  const stylesInImportsSelector = [\n    `${IMPORT_SELECTOR} style:not([type])`,\n    `${IMPORT_SELECTOR} link[rel=stylesheet][href]:not([type])`\n  ].join(',');\n\n  const importsSelectors = [\n    IMPORT_SELECTOR,\n    stylesSelector,\n    'script:not([type])',\n    'script[type=\"application/javascript\"]',\n    'script[type=\"text/javascript\"]'\n  ].join(',');\n\n  // importer\n  // highlander object to manage loading of imports\n  // for any document, importer:\n  // - loads any linked import documents (with deduping)\n  // - whenever an import is loaded, prompts the parser to try to parse\n  // - observes imported documents for new elements (these are handled via the\n  // dynamic importer)\n  class Importer {\n    /**\n     * @param {HTMLDocument} doc\n     */\n    constructor(doc) {\n      this.documents = {};\n      // Make sure to catch any imports that are in the process of loading\n      // when this script is run.\n      const imports = doc.querySelectorAll(IMPORT_SELECTOR);\n      for (let i = 0, l = imports.length; i < l; i++) {\n        whenElementLoaded(imports[i]);\n      }\n      // Observe only document head\n      new MutationObserver(this._onMutation.bind(this)).observe(doc.head, {\n        childList: true\n      });\n\n      if (!useNative) {\n        this._loader = new Loader(\n          this._onLoaded.bind(this), this._onLoadedAll.bind(this)\n        );\n        whenDocumentReady(doc).then(() => this._loadSubtree(doc));\n      }\n    }\n\n    _loadSubtree(doc) {\n      const nodes = doc.querySelectorAll(IMPORT_SELECTOR);\n      // add these nodes to loader's queue\n      this._loader.addNodes(nodes);\n    }\n\n    _onLoaded(url, elt, resource, err, redirectedUrl) {\n      flags.log && console.log('loaded', url, elt);\n      // We've already seen a document at this url, return.\n      if (this.documents[url] !== undefined) {\n        return;\n      }\n      if (err) {\n        this.documents[url] = null;\n      } else {\n        // Generate an HTMLDocument from data.\n        const doc = makeDocument(resource, redirectedUrl || url);\n        // note, we cannot use MO to detect parsed nodes because\n        // SD polyfill does not report these as mutations.\n        this._loadSubtree(doc);\n        this.documents[url] = doc;\n      }\n    }\n\n    _onLoadedAll() {\n      this._flatten(document);\n      Promise.all([\n        runScripts(),\n        waitForStyles()\n      ]).then(fireEvents);\n    }\n\n    _flatten(element) {\n      const n$ = element.querySelectorAll(IMPORT_SELECTOR);\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        n.import = this.documents[n.href];\n        if (n.import && !n.import.__firstImport) {\n          n.import.__firstImport = n;\n          this._flatten(n.import);\n          n.appendChild(n.import);\n          // If in the main document, observe for any imports added later.\n          if (element === document) {\n            this._observe(n.import);\n          }\n        }\n      }\n    }\n\n    _observe(element) {\n      if (element.__importObserver) {\n        return;\n      }\n      element.__importObserver = new MutationObserver(this._onMutation.bind(this));\n      element.__importObserver.observe(element, {\n        childList: true,\n        subtree: true\n      });\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    _onMutation(mutations) {\n      for (let j = 0, m; j < mutations.length && (m = mutations[j]); j++) {\n        for (let i = 0, l = m.addedNodes ? m.addedNodes.length : 0; i < l; i++) {\n          const n = /** @type {Element} */ (m.addedNodes[i]);\n          if (n && isImportLink(n)) {\n            if (useNative) {\n              whenElementLoaded(n);\n            } else {\n              this._loader.addNode(n);\n            }\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * @type {Function}\n   */\n  const MATCHES = Element.prototype.matches ||\n    Element.prototype.matchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.oMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  function isImportLink(node) {\n    return node.nodeType === Node.ELEMENT_NODE && MATCHES.call(node, IMPORT_SELECTOR);\n  }\n\n  /********************* vulcanize style inline processing  *********************/\n  const attrs = ['action', 'src', 'href', 'url', 'style'];\n\n  function fixUrlAttributes(element, base) {\n    attrs.forEach((a) => {\n      const at = element.attributes[a];\n      const v = at && at.value;\n      if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n        at.value = (a === 'style') ?\n          Path.resolveUrlsInCssText(v, base) :\n          Path.replaceAttrUrl(v, base);\n      }\n    });\n  }\n\n  function fixUrlsInTemplate(template, base) {\n    const content = template.content;\n    if (!content) { // Template not supported.\n      return;\n    }\n    const n$ = content.querySelectorAll('style, form[action], [src], [href], [url], [style]');\n    for (let i = 0; i < n$.length; i++) {\n      const n = n$[i];\n      if (n.localName == 'style') {\n        Path.resolveUrlsInStyle(n, base);\n      } else {\n        fixUrlAttributes(n, base);\n      }\n    }\n    fixUrlsInTemplates(content, base);\n  }\n\n  function fixUrlsInTemplates(element, base) {\n    const t$ = element.querySelectorAll('template');\n    for (let i = 0; i < t$.length; i++) {\n      fixUrlsInTemplate(t$[i], base);\n    }\n  }\n\n  const scriptType = 'import-script';\n\n  function fixUrls(element, base) {\n    const n$ = element.querySelectorAll(importsSelectors);\n    for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n      // Ensure we add load/error listeners before modifying urls or appending\n      // these to the main document.\n      whenElementLoaded(n);\n      if (n.href) {\n        n.setAttribute('href', Path.replaceAttrUrl(n.getAttribute('href'), base));\n      }\n      if (n.src) {\n        n.setAttribute('src', Path.replaceAttrUrl(n.getAttribute('src'), base));\n      }\n      if (n.localName == 'style') {\n        Path.resolveUrlsInStyle(n, base);\n      } else if (n.localName === 'script') {\n        if (n.textContent) {\n          n.textContent += `\\n//# sourceURL=${base}`;\n        }\n        // NOTE: we override the type here, might need to keep track of original\n        // type and apply it to clone when running the script.\n        n.setAttribute('type', scriptType);\n      }\n    }\n    fixUrlsInTemplates(element, base);\n  }\n\n  /**\n   * Replaces all the imported scripts with a clone in order to execute them.\n   * Updates the `currentScript`.\n   * @return {Promise} Resolved when scripts are loaded.\n   */\n  function runScripts() {\n    const s$ = document.querySelectorAll(`script[type=${scriptType}]`);\n    let promise = Promise.resolve();\n    for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n      promise = promise.then(() => {\n        const c = document.createElement('script');\n        c.textContent = s.textContent;\n        if (s.src) {\n          c.setAttribute('src', s.getAttribute('src'));\n        }\n        // Listen for load/error events before adding the clone to the document.\n        // Catch failures, always return c.\n        const whenLoadedPromise = whenElementLoaded(c).catch(() => c);\n        // Update currentScript and replace original with clone script.\n        currentScript = c;\n        s.parentNode.replaceChild(c, s);\n        // After is loaded, reset currentScript.\n        return whenLoadedPromise.then((script) => {\n          if (script === currentScript) {\n            currentScript = null;\n          }\n        });\n      });\n    }\n    return promise;\n  }\n\n  function waitForStyles() {\n    const s$ = document.querySelectorAll(stylesInImportsSelector);\n    const promises = [];\n    for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n      // Catch failures, always return s\n      promises.push(\n        whenElementLoaded(s).catch(() => s)\n      );\n    }\n    return Promise.all(promises).then(() => {\n      // IE and Edge require styles/links to be siblings in order to apply correctly.\n      if ((isIE || isEdge) && s$.length) {\n        const n$ = document.head.querySelectorAll(stylesSelector);\n        for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n          n.parentNode.removeChild(n);\n          document.head.appendChild(n);\n        }\n      }\n      return s$;\n    });\n  }\n\n  function fireEvents() {\n    const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(IMPORT_SELECTOR));\n    // Inverse order to have events firing bottom-up.\n    for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n      // Don't fire twice same event.\n      if (!n.__fired) {\n        n.__fired = true;\n        const eventType = n.import ? 'load' : 'error';\n        flags.log && console.warn('fire', eventType, n.href);\n        n.dispatchEvent(new CustomEvent(eventType, {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        }));\n      }\n    }\n  }\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the elemnt accordingly.\n   * @param {!Element} element\n   * @return {Promise}\n   */\n  function whenElementLoaded(element) {\n    if (!element.__loadPromise) {\n      element.__loadPromise = new Promise((resolve, reject) => {\n        if (isElementLoaded(element)) {\n          resolve(element);\n        } else {\n          element.addEventListener('load', () => resolve(element));\n          element.addEventListener('error', () => reject(element));\n        }\n      });\n    }\n    return element.__loadPromise;\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {boolean}\n   */\n  function isElementLoaded(element) {\n    let isLoaded = false;\n    if (useNative && isImportLink(element) && element.import &&\n      element.import.readyState !== 'loading') {\n      isLoaded = true;\n    } else if (isIE && element.localName === 'style') {\n      // NOTE: IE does not fire \"load\" event for styles that have already\n      // loaded. This is in violation of the spec, so we try our hardest to\n      // work around it.\n      // If there's not @import in the textContent, assume it has loaded\n      if (element.textContent.indexOf('@import') == -1) {\n        isLoaded = true;\n        // if we have a sheet, we have been parsed\n      } else if (element.sheet) {\n        isLoaded = true;\n        const csr = element.sheet.cssRules;\n        // search the rules for @import's\n        for (let i = 0, l = csr ? csr.length : 0; i < l && isLoaded; i++) {\n          if (csr[i].type === CSSRule.IMPORT_RULE) {\n            // if every @import has resolved, fake the load\n            isLoaded = Boolean(csr[i].styleSheet);\n          }\n        }\n      }\n    } else if (element.localName === 'script' && !element.src) {\n      isLoaded = true;\n    }\n    return isLoaded;\n  }\n\n  function fixDomModules(element, url) {\n    const s$ = element.querySelectorAll('dom-module');\n    for (let i = 0; i < s$.length; i++) {\n      const o = s$[i];\n      const assetpath = o.getAttribute('assetpath') || '';\n      o.setAttribute('assetpath', Path.replaceAttrUrl(assetpath, url));\n    }\n  }\n\n  function makeDocument(resource, url) {\n    // TODO(valdrin): better to use a disconnected document here so that\n    // elements don't upgrade until inserted into main document,\n    // however, this is blocked on https://bugs.webkit.org/show_bug.cgi?id=165617\n    // let doc = document.implementation.createHTMLDocument();\n    const content = document.createElement('import-content');\n    content.setAttribute('import-href', url);\n    content.style.display = 'none';\n    content.innerHTML = resource;\n\n    // TODO(sorvell): this is specific to users (Polymer) of the dom-module element.\n    fixDomModules(content, url);\n    fixUrls(content, url);\n    return content;\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n\n  const isIE = /Trident/.test(navigator.userAgent);\n  const isEdge = !isIE && /Edge\\/\\d./i.test(navigator.userAgent);\n  const requiredReadyState = isIE ? 'complete' : 'interactive';\n  const READY_EVENT = 'readystatechange';\n\n  // call a callback when all HTMLImports in the document at call time\n  // (or at least document ready) have loaded.\n  // 1. ensure the document is in a ready state (has dom), then\n  // 2. watch for loading of imports and call callback when done\n  function whenReady(callback, doc) {\n    doc = doc || document;\n    // if document is loading, wait and try again\n    return whenDocumentReady(doc).then(watchImportsLoad).then((importInfo) => {\n      callback && callback(importInfo);\n      return importInfo;\n    });\n  }\n\n  function isDocumentReady(doc) {\n    return (doc.readyState === 'complete' ||\n      doc.readyState === requiredReadyState);\n  }\n\n  // call <callback> when we ensure the document is in a ready state\n  function whenDocumentReady(doc) {\n    if (isDocumentReady(doc)) {\n      return Promise.resolve(doc);\n    }\n    return new Promise((resolve) => {\n      doc.addEventListener(READY_EVENT, function checkReady() {\n        if (isDocumentReady(doc)) {\n          doc.removeEventListener(READY_EVENT, checkReady);\n          resolve(doc);\n        }\n      });\n    });\n  }\n\n  // call <callback> when we ensure all imports have loaded\n  function watchImportsLoad(doc) {\n    let imports = doc.querySelectorAll(IMPORT_SELECTOR);\n    const promises = [];\n    const importInfo = /** @type {!HTMLImportInfo} */ ({\n      allImports: [],\n      loadedImports: [],\n      errorImports: []\n    });\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      // Skip nested imports.\n      if (MATCHES.call(imp, `${IMPORT_SELECTOR} ${IMPORT_SELECTOR}`)) {\n        continue;\n      }\n      importInfo.allImports.push(imp);\n      promises.push(whenElementLoaded(imp).then((imp) => {\n        importInfo.loadedImports.push(imp);\n        return imp;\n      }).catch((imp) => {\n        importInfo.errorImports.push(imp);\n        // Capture failures, always return imp.\n        return imp;\n      }));\n    }\n    // Return aggregated info.\n    return Promise.all(promises).then(() => importInfo);\n  }\n\n  new Importer(document);\n\n  // Fire the 'HTMLImportsLoaded' event when imports in document at load time\n  // have loaded. This event is required to simulate the script blocking\n  // behavior of native imports. A main document script that needs to be sure\n  // imports have loaded should wait for this event.\n  whenReady((detail) =>\n    document.dispatchEvent(new CustomEvent('HTMLImportsLoaded', {\n      cancelable: true,\n      bubbles: true,\n      detail: detail\n    })));\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n\n})(window.HTMLImports = (window.HTMLImports || {}));\n"]}